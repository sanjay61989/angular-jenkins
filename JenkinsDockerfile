pipeline {
    tools {
        nodejs 'nodejs20'
    }
    agent any

    parameters {
        booleanParam(name: 'BUILD_MFE_SHELL', defaultValue:true,description: 'Build mfe-shell')
        booleanParam(name: 'BUILD_GYM_TRACKER', description: 'Build gym-tracker')
        booleanParam(name: 'BUILD_MEAL_PLANNER', description: 'Build meal-planner')
    }
    stages {
        stage('Clone Repositories') {
            steps {                
                script {
                    // sh 'git clone https://github.com/sanjay61989/angular-jenkins.git .'
                    if (params.BUILD_MFE_SHELL) {                        
                        sh 'git clone https://github.com/sanjay61989/mfe-shell.git'
                    }
                    if (params.BUILD_GYM_TRACKER) {
                        sh 'git clone https://github.com/sanjay61989/gym-tracker.git'
                    }
                    if (params.BUILD_MEAL_PLANNER) {
                        sh 'git clone https://github.com/sanjay61989/meal-planner.git'
                    }                    
                }
            }
        }
        stage('Build Projects') {
            steps {
                script {
                    if (params.BUILD_MFE_SHELL) {
                        dir('mfe-shell') {
                            sh 'npm install'
                            sh 'npm run build'
                            sh 'mkdir -p /tmp/build/mfe-shell/mfe-shell'
                            sh 'cp -rf dist/shell/browser/* /tmp/build/mfe-shell/mfe-shell'
                            sh 'sudo rm -rf /usr/share/nginx/html/mfe-shell'
                        }
                    }
                    if (params.BUILD_GYM_TRACKER) {
                        dir('gym-tracker') {
                            sh 'npm install'
                            sh 'npm run build'
                            sh 'mkdir -p /tmp/build/mfe-shell/gym-tracker'
                            sh 'cp -rf dist/gym-tracker/browser/* /tmp/build/mfe-shell/gym-tracker'
                            sh 'sudo rm -rf /usr/share/nginx/html/gym-tracker'
                        }
                    }
                    if (params.BUILD_MEAL_PLANNER) {
                        dir('meal-planner') {
                            sh 'npm install'
                            sh 'npm run build'
                            sh 'mkdir -p /tmp/build/mfe-shell/meal-planner'
                            sh 'cp -r dist/meal-planner/browser/* /tmp/build/mfe-shell/meal-planner'
                            sh 'sudo rm -rf /usr/share/nginx/html/meal-planner'
                        }
                    }
                }
            }
        }               
        stage('Deploy') {
            steps {
                script {
                    dir('mfe-shell') {                    
                        sh '''                        
                         sudo cp -r /tmp/build/mfe-shell/* /usr/share/nginx/html
                         sudo cp /var/lib/jenkins/workspace/myapp/nginx.conf /etc/nginx/nginx.conf
                         sudo nginx -t
                         sudo systemctl stop nginx
                         sudo systemctl start nginx
                        echo "Nginx deployment completed successfully."
                    '''
                    }                    
                }            
            }
        }       
    }
    post {
        always {
            script {
                cleanWs()
            }
        }
    }
}
